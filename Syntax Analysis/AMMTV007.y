%{
    #include<stdio.h>
    #include<stdlib.h>
    #include<math.h>
    #include<string.h>
    #include<ctype.h>
    extern FILE *yyin;
%}

%left '+' '-'
%left '*' '/'
%token IDENTIFIER BOOLEAN_CONST INT_CONST REAL_CONST CHAR_CONST ARR STRING
%token PROGRAM INT REAL BOOLEAN CHAR VAR TYPE IF THEN ELSE FOR DO WHILE ARRAY TO DOWNTO OF START END READ WRITE
%token PLUS MINUS MUL DIV MOD GTR LESS GTR_EQ LESS_EQ EQ NOT_EQ AND OR NOT ASS
%token SEMICOLON COMMA COLON LPAREN RPAREN LBRACE RBRACE LBRACKET RBRACKET SQT DQT DOT NEWLINE
%token UNK END_OF_FILE

%%

S : PROGRAM IDENTIFIER SEMICOLON BLOCK DOT
  ;

BLOCK : VAR_DECL START STMT_LIST END
      ;
VAR_DECL : VAR VAR_DECL_LIST
         | 
         ;

VAR_DECL_LIST : VAR_DECL_LIST VAR_DECL_ITEM SEMICOLON
              |  
              ;

VAR_DECL_ITEM : IDENTIFIER_LIST COLON TYPE_SPECIFIER
	      ;
	      
IDENTIFIER_LIST : IDENTIFIER
                | IDENTIFIER_LIST COMMA IDENTIFIER
                ; 

READ_LIST : IDENTIFIER
	  | IDENTIFIER LBRACKET EXPR RBRACKET
	  | READ_LIST COMMA IDENTIFIER
	  | READ_LIST COMMA IDENTIFIER LBRACKET EXPR RBRACKET
	  ;

TYPE_SPECIFIER : INT
               | REAL
               | BOOLEAN
               | CHAR
               | ARRAY LBRACKET INT_CONST DOT DOT INT_CONST RBRACKET OF TYPE_SPECIFIER
               ;

STMT_LIST : STMT SEMICOLON STMT_LIST
	  |
	  ;
          
SMP_STMT_LIST : SMP_STMT SEMICOLON SMP_STMT_LIST
	      |
	      ;

STMT : WHILE_STMT 
     | FOR_STMT
     | SMP_STMT
     ;

SMP_STMT : ASSIGNMENT_STMT
     	 | READ_STMT
     	 | WRITE_STMT
     	 | IF_STMT
     	 ;
   
ASSIGNMENT_STMT : IDENTIFIER ASS EXPR
		| IDENTIFIER LBRACKET EXPR RBRACKET ASS EXPR
		;

READ_STMT : READ LPAREN READ_LIST RPAREN
          ;

WRITE_STMT : WRITE LPAREN DQT STRING DQT RPAREN
	   | WRITE LPAREN DQT STRING DQT COMMA VAR_LIST RPAREN
           | WRITE LPAREN VAR_LIST RPAREN
           ;

VAR_LIST : VAR_LIST COMMA EXPR
	 | EXPR
	 ;

IF_STMT :  IF EXPR THEN START SMP_STMT_LIST END ELSE START SMP_STMT_LIST END 
        |  IF EXPR THEN START SMP_STMT_LIST END 
        ;


WHILE_STMT : WHILE EXPR DO START SMP_STMT_LIST END 
           ;

FOR_STMT : FOR IDENTIFIER ASS EXPR TO EXPR DO START SMP_STMT_LIST END 
	 | FOR IDENTIFIER ASS EXPR DOWNTO EXPR DO START SMP_STMT_LIST END 
	 ;

EXPR : EXPR COMP_OP TERM
     | TERM
     ;

COMP_OP : GTR | LESS | GTR_EQ | LESS_EQ | NOT_EQ | AND | OR | EQ ;

TERM : TERM PLUS FACTOR | TERM MINUS FACTOR | TERM MUL FACTOR | TERM DIV FACTOR | TERM MOD FACTOR | NOT FACTOR | FACTOR ;

FACTOR : LPAREN EXPR RPAREN | IDENTIFIER | CONST 
       | IDENTIFIER LBRACKET EXPR RBRACKET
       ;

CONST : INT_CONST 
      | REAL_CONST 
      | CHAR_CONST
      | BOOLEAN_CONST
      ;

%%

void yyerror()
{   //printTable();
    printf("Syntax Error\n");
    exit(0);
}

int main()
{
    yyin = fopen("input.txt","r");
    yyparse();
    //printTable();
    printf("Parse Successful!\n");
    return 0;
}
